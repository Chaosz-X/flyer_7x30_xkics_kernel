From 09b2895853683b044c5937706055440532ddfc63 Mon Sep 17 00:00:00 2001
From: Jordan Crouse <jcrouse@codeaurora.org>
Date: Mon, 27 Jun 2011 13:20:52 -0600
Subject: [PATCH] msm: kgsl: Remove unneeded and redundant ringbuffer code

Replace log2 function with the builtin kernel versions and
remove various if statements and unused flags.

Change-Id: Ic0dedbadfab29a17569fba4c5c1e24ab4dc2e3a6
Signed-off-by: Jordan Crouse <jcrouse@codeaurora.org>

Conflicts:

	drivers/gpu/msm/adreno_ringbuffer.c
	drivers/gpu/msm/adreno_ringbuffer.h
---
 drivers/gpu/msm/adreno_ringbuffer.c |   56 ++++++++++++++++------------------
 drivers/gpu/msm/adreno_ringbuffer.h |   33 ++++----------------
 2 files changed, 33 insertions(+), 56 deletions(-)

diff --git a/drivers/gpu/msm/adreno_ringbuffer.c b/drivers/gpu/msm/adreno_ringbuffer.c
index 8c00e93..2c7845e 100644
--- a/drivers/gpu/msm/adreno_ringbuffer.c
+++ b/drivers/gpu/msm/adreno_ringbuffer.c
@@ -18,6 +18,7 @@
 #include <linux/firmware.h>
 #include <linux/slab.h>
 #include <linux/sched.h>
+#include <linux/log2.h>
 
 #include "kgsl.h"
 #include "adreno.h"
@@ -50,19 +51,6 @@
 #define LEIA_PFP_470_FW "leia_pfp_470.fw"
 #define LEIA_PM4_470_FW "leia_pm4_470.fw"
 
-/*  ringbuffer size log2 quadwords equivalent */
-inline unsigned int kgsl_ringbuffer_sizelog2quadwords(unsigned int sizedwords)
-{
-	unsigned int sizelog2quadwords = 0;
-	int i = sizedwords >> 1;
-
-	while (i >>= 1)
-		sizelog2quadwords++;
-
-	return sizelog2quadwords;
-}
-
-
 /* functions */
 void kgsl_cp_intrcallback(struct kgsl_device *device)
 {
@@ -164,8 +152,6 @@ static void kgsl_ringbuffer_submit(struct kgsl_ringbuffer *rb)
 	mb();
 
 	kgsl_yamato_regwrite(rb->device, REG_CP_RB_WPTR, rb->wptr);
-
-	rb->flags |= KGSL_FLAGS_ACTIVE;
 }
 
 static int
@@ -391,11 +377,20 @@ int kgsl_ringbuffer_start(struct kgsl_ringbuffer *rb, unsigned int init_ram)
 	/*setup REG_CP_RB_CNTL */
 	kgsl_yamato_regread(device, REG_CP_RB_CNTL, &rb_cntl);
 	cp_rb_cntl.val = rb_cntl;
-	/* size of ringbuffer */
-	cp_rb_cntl.f.rb_bufsz =
-		kgsl_ringbuffer_sizelog2quadwords(rb->sizedwords);
-	/* quadwords to read before updating mem RPTR */
-	cp_rb_cntl.f.rb_blksz = rb->blksizequadwords;
+
+	/*
+	 * The size of the ringbuffer in the hardware is the log2
+	 * representation of the size in quadwords (sizedwords / 2)
+	 */
+	cp_rb_cntl.f.rb_bufsz = ilog2(rb->sizedwords >> 1);
+
+	/*
+	 * Specify the quadwords to read before updating mem RPTR.
+	 * Like above, pass the log2 representation of the blocksize
+	 * in quadwords.
+	*/
+	cp_rb_cntl.f.rb_blksz = ilog2(KGSL_RB_BLKSIZE >> 3);
+
 	cp_rb_cntl.f.rb_poll_en = GSL_RB_CNTL_POLL_EN; /* WPTR polling */
 	/* mem RPTR writebacks */
 	cp_rb_cntl.f.rb_no_update =  GSL_RB_CNTL_NO_UPDATE;
@@ -518,8 +513,12 @@ int kgsl_ringbuffer_init(struct kgsl_device *device)
 	struct kgsl_ringbuffer *rb = &yamato_device->ringbuffer;
 
 	rb->device = device;
-	rb->sizedwords = (2 << kgsl_cfg_rb_sizelog2quadwords);
-	rb->blksizequadwords = kgsl_cfg_rb_blksizequadwords;
+	/*
+	 * It is silly to convert this to words and then back to bytes
+	 * immediately below, but most of the rest of the code deals
+	 * in words, so we might as well only do the math once
+	 */
+	rb->sizedwords = KGSL_RB_SIZE >> 2;
 
 	/* allocate memory for ringbuffer */
 	status = kgsl_allocate_contig(&rb->buffer_desc, (rb->sizedwords << 2));
@@ -548,16 +547,13 @@ int kgsl_ringbuffer_close(struct kgsl_ringbuffer *rb)
 {
 	struct kgsl_yamato_device *yamato_device = KGSL_YAMATO_DEVICE(
 							rb->device);
-	if (rb->buffer_desc.hostptr)
-		kgsl_sharedmem_free(&rb->buffer_desc);
 
-	if (rb->memptrs_desc.hostptr)
-		kgsl_sharedmem_free(&rb->memptrs_desc);
+	kgsl_sharedmem_free(&rb->buffer_desc);
+	kgsl_sharedmem_free(&rb->memptrs_desc);
+
+	kfree(adreno_dev->pfp_fw);
+	kfree(adreno_dev->pm4_fw);
 
-	if (yamato_device->pfp_fw != NULL)
-		kfree(yamato_device->pfp_fw);
-	if (yamato_device->pm4_fw != NULL)
-		kfree(yamato_device->pm4_fw);
 	yamato_device->pfp_fw = NULL;
 	yamato_device->pm4_fw = NULL;
 
diff --git a/drivers/gpu/msm/adreno_ringbuffer.h b/drivers/gpu/msm/adreno_ringbuffer.h
index 7b568c1..21e1725 100644
--- a/drivers/gpu/msm/adreno_ringbuffer.h
+++ b/drivers/gpu/msm/adreno_ringbuffer.h
@@ -33,31 +33,13 @@
 #define GSL_RB_USE_MEM_TIMESTAMP
 #define GSL_DEVICE_SHADOW_MEMSTORE_TO_USER
 
-/* ringbuffer sizes log2quadword */
-#define GSL_RB_SIZE_8		0
-#define GSL_RB_SIZE_16		1
-#define GSL_RB_SIZE_32		2
-#define GSL_RB_SIZE_64		3
-#define GSL_RB_SIZE_128		4
-#define GSL_RB_SIZE_256		5
-#define GSL_RB_SIZE_512		6
-#define GSL_RB_SIZE_1K  	7
-#define GSL_RB_SIZE_2K  	8
-#define GSL_RB_SIZE_4K  	9
-#define GSL_RB_SIZE_8K  	10
-#define GSL_RB_SIZE_16K 	11
-#define GSL_RB_SIZE_32K 	12
-#define GSL_RB_SIZE_64K 	13
-#define GSL_RB_SIZE_128K	14
-#define GSL_RB_SIZE_256K	15
-#define GSL_RB_SIZE_512K	16
-#define GSL_RB_SIZE_1M		17
-#define GSL_RB_SIZE_2M		18
-#define GSL_RB_SIZE_4M		19
-
-/* Yamato ringbuffer config*/
-static const unsigned int kgsl_cfg_rb_sizelog2quadwords = GSL_RB_SIZE_32K;
-static const unsigned int kgsl_cfg_rb_blksizequadwords  = GSL_RB_SIZE_16;
+/*
+ * Adreno ringbuffer sizes in bytes - these are converted to
+ * the appropriate log2 values in the code
+ */
+
+#define KGSL_RB_SIZE (32 * 1024)
+#define KGSL_RB_BLKSIZE 16
 
 /* CP timestamp register */
 #define	REG_CP_TIMESTAMP		 REG_SCRATCH_REG0
@@ -89,7 +71,6 @@ struct kgsl_ringbuffer {
 
 	/*ringbuffer size */
 	unsigned int sizedwords;
-	unsigned int blksizequadwords;
 
 	unsigned int wptr; /* write pointer offset in dwords from baseaddr */
 	unsigned int rptr; /* read pointer offset in dwords from baseaddr */
-- 
1.7.5.4

